generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int             @id @default(autoincrement())
  fullName   String?
  email      String          @unique
  password   String?
  provider   String?
  providerId String?
  createdAt  DateTime        @default(now())
  event      Event[]
  attendee   Ticket_Holder[]

  @@index([provider, providerId])
}

model Event {
  id           Int             @id @default(autoincrement())
  organiser    User            @relation(fields: [organiserId], references: [id])
  organiserId  Int
  name         String
  description  String
  location     String
  date         DateTime
  duration     String
  totalTickets Int             @default(0)
  registered   Int             @default(0)
  eventType    EVENT_TYPE      @default(PHYSICAL)
  ticketStatus STATUS          @default(AVAILABLE)
  eventStatus  EVENT_STATUS    @default(UPCOMING)
  qrCode       String?
  ticketType   Ticket_Type[]
  attendee     Ticket_Holder[]

  @@index([ticketStatus])
  @@index([eventStatus])
}

enum STATUS {
  AVAILABLE
  SOLD_OUT
}

enum EVENT_TYPE {
  PHYSICAL
  VIRTUAL
  HYBRID
}

enum EVENT_STATUS {
  UPCOMING
  ACTIVE
  DONE
}

model Ticket_Type {
  id           Int             @id @default(autoincrement())
  name         String
  amount       Int
  available    Int?
  status       STATUS          @default(AVAILABLE)
  description  String?
  event        Event           @relation(fields: [eventId], references: [id])
  eventId      Int
  ticketHolder Ticket_Holder[]
}

model Ticket_Holder {
  id         Int           @id @default(autoincrement())
  user       User          @relation(fields: [userId], references: [id])
  userId     Int
  event      Event         @relation(fields: [eventId], references: [id])
  eventId    Int
  createdAt  DateTime      @default(now())
  ticketType Ticket_Type[]

  @@unique([userId, eventId])
}
